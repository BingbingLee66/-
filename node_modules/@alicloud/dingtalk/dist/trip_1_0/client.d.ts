/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class SyncSecretKeyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyRequest extends $tea.Model {
    actionType?: string;
    secretString?: string;
    targetCorpId?: string;
    tripAppKey?: string;
    tripAppSecurity?: string;
    tripCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyResponseBody extends $tea.Model {
    result?: SyncSecretKeyResponseBodyResult;
    success?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: SyncSecretKeyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequest extends $tea.Model {
    currency?: string;
    dingUserId?: string;
    discountAmount?: string;
    endorseFlag?: boolean;
    event?: SyncTripOrderRequestEvent;
    gmtOrder?: string;
    gmtPay?: string;
    gmtRefund?: string;
    invoiceApplyUrl?: string;
    journeyBizNo?: string;
    orderDetails?: SyncTripOrderRequestOrderDetails[];
    orderNo?: string;
    orderUrl?: string;
    realAmount?: string;
    refundAmount?: string;
    relativeOrderNo?: string;
    source?: string;
    targetCorpId?: string;
    totalAmount?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderResponseBody extends $tea.Model {
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: SyncTripOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyResponseBodyResult extends $tea.Model {
    secretString?: string;
    targetCorpId?: string;
    tripAppKey?: string;
    tripAppSecurity?: string;
    tripCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestEvent extends $tea.Model {
    action?: string;
    gmtAction?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestOrderDetailsHotelLocation extends $tea.Model {
    lat?: string;
    lon?: string;
    source?: string;
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestOrderDetails extends $tea.Model {
    arrivalTime?: string;
    carColor?: string;
    carModel?: string;
    carNumber?: string;
    cateringType?: string;
    checkInTime?: string;
    checkOutTime?: string;
    departTime?: string;
    destinationCityCode?: string;
    destinationStation?: string;
    hotelAddress?: string;
    hotelLocation?: SyncTripOrderRequestOrderDetailsHotelLocation;
    hotelName?: string;
    originCityCode?: string;
    originStation?: string;
    roomCount?: number;
    seatInfo?: string;
    serviceType?: string;
    subSupplyLogo?: string;
    subSupplyName?: string;
    taxiType?: string;
    telephone?: string;
    transportNumber?: string;
    typeDescription?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    syncSecretKey(request: SyncSecretKeyRequest): Promise<SyncSecretKeyResponse>;
    syncSecretKeyWithOptions(request: SyncSecretKeyRequest, headers: SyncSecretKeyHeaders, runtime: $Util.RuntimeOptions): Promise<SyncSecretKeyResponse>;
    syncTripOrder(request: SyncTripOrderRequest): Promise<SyncTripOrderResponse>;
    syncTripOrderWithOptions(request: SyncTripOrderRequest, headers: SyncTripOrderHeaders, runtime: $Util.RuntimeOptions): Promise<SyncTripOrderResponse>;
}
