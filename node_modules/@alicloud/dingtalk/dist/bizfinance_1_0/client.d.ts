/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class BatchAddInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequest extends $tea.Model {
    generalInvoiceVOList?: BatchAddInvoiceRequestGeneralInvoiceVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponseBody extends $tea.Model {
    result?: BatchAddInvoiceResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: BatchAddInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusRequest extends $tea.Model {
    endTime?: number;
    financeType?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    taxNo?: string;
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: CheckVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerRequest extends $tea.Model {
    creator?: string;
    description?: string;
    name?: string;
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserBankName?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponseBody extends $tea.Model {
    customerCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: CreateCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptRequest extends $tea.Model {
    receipts?: CreateReceiptRequestReceipts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptResponseBody extends $tea.Model {
    results?: CreateReceiptResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: CreateReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptRequest extends $tea.Model {
    receipts?: DeleteReceiptRequestReceipts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptResponseBody extends $tea.Model {
    results?: DeleteReceiptResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: DeleteReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBookkeepingUserListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBookkeepingUserListResponseBody extends $tea.Model {
    result?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBookkeepingUserListResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetBookkeepingUserListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryResponseBody extends $tea.Model {
    code?: string;
    isDir?: boolean;
    name?: string;
    parentCode?: string;
    status?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetCategoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerResponseBody extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountRequest extends $tea.Model {
    accountCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountResponseBody extends $tea.Model {
    accountCode?: string;
    accountId?: string;
    accountName?: string;
    accountRemark?: string;
    accountType?: string;
    amount?: string;
    bankCode?: string;
    bankName?: string;
    createTime?: number;
    creator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetFinanceAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageRequest extends $tea.Model {
    request?: GetInvoiceByPageRequestRequest;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageShrinkRequest extends $tea.Model {
    requestShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBody extends $tea.Model {
    errorCode?: string;
    errorMsg?: string;
    result?: GetInvoiceByPageResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetInvoiceByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIsNewVersionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIsNewVersionResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIsNewVersionResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetIsNewVersionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectResponseBody extends $tea.Model {
    code?: string;
    createTime?: number;
    creator?: string;
    description?: string;
    name?: string;
    projectCode?: string;
    projectName?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptRequest extends $tea.Model {
    code?: string;
    modelId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptResponseBody extends $tea.Model {
    appId?: string;
    data?: string;
    modelId?: string;
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierRequest extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierResponseBody extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: GetSupplierResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCategoryByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryCategoryByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCustomerByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryCustomerByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoRequest extends $tea.Model {
    keyword?: string;
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCustomerInfoResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryCustomerInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryEnterpriseAccountByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryEnterpriseAccountByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFinanceCompanyInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFinanceCompanyInfoResponseBody extends $tea.Model {
    companyName?: string;
    taxNature?: string;
    taxNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFinanceCompanyInfoResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryFinanceCompanyInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceRelationCountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceRelationCountResponseBody extends $tea.Model {
    relationCountMap?: {
        [key: string]: number;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceRelationCountResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryInvoiceRelationCountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdRequest extends $tea.Model {
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdResponseBody extends $tea.Model {
    permissionDTOList?: QueryPermissionByUserIdResponseBodyPermissionDTOList[];
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryPermissionByUserIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberRequest extends $tea.Model {
    roleCodeList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberResponseBody extends $tea.Model {
    roleMemberMap?: {
        [key: string]: RoleMemberMapValue;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionRoleMemberResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryPermissionRoleMemberResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryProjectByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryProjectByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceRequest extends $tea.Model {
    applyStatusList?: string[];
    endTime?: number;
    pageNumber?: number;
    pageSize?: number;
    receiptStatusList?: string[];
    startTime?: number;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBody extends $tea.Model {
    hasMore?: string;
    list?: QueryReceiptForInvoiceResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryReceiptForInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoRequest extends $tea.Model {
    endTime?: number;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    title?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBody extends $tea.Model {
    hasMore?: string;
    list?: QueryReceiptsBaseInfoResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryReceiptsBaseInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageRequest extends $tea.Model {
    endTime?: number;
    modelId?: string;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    timeFilterField?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageResponseBody extends $tea.Model {
    hasMore?: string;
    list?: QueryReceiptsByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QueryReceiptsByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageRequest extends $tea.Model {
    pageNumber?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QuerySupplierByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: QuerySupplierByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequest extends $tea.Model {
    generalInvoiceVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOList[];
    instanceId?: string;
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBody extends $tea.Model {
    batchUpdateInvoiceResponse?: UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponse;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateApplyReceiptAndInvoiceRelatedResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoRequest extends $tea.Model {
    companyName?: string;
    taxNature?: string;
    taxNo?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFinanceCompanyInfoResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateFinanceCompanyInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequest extends $tea.Model {
    blueGeneralInvoiceVO?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVO;
    blueInvoiceCode?: string;
    blueInvoiceNo?: string;
    blueInvoiceStatus?: string;
    operator?: string;
    redGeneralInvoiceVO?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVO;
    redInvoiceCode?: string;
    redInvoiceNo?: string;
    redInvoiceStatus?: string;
    targetInvoice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateInvoiceAbandonStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequest extends $tea.Model {
    accountPeriod?: string;
    generalInvoiceVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOList[];
    invoiceKeyVOList?: UpdateInvoiceAccountPeriodRequestInvoiceKeyVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateInvoiceAccountPeriodResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequest extends $tea.Model {
    generalInvoiceVO?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVO;
    invoiceCode?: string;
    invoiceNo?: string;
    operator?: string;
    receiptCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateInvoiceAndReceiptRelatedResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusRequest extends $tea.Model {
    instanceId?: string;
    operator?: string;
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceIgnoreStatusResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateInvoiceIgnoreStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequest extends $tea.Model {
    deductStatus?: string;
    generalInvoiceVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOList[];
    invoiceKeyVOList?: UpdateInvoiceVerifyStatusRequestInvoiceKeyVOList[];
    operator?: string;
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateInvoiceVerifyStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusRequest extends $tea.Model {
    actionType?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    operator?: string;
    voucherId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVoucherStatusResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateInvoiceVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptRequest extends $tea.Model {
    receipts?: UpdateReceiptRequestReceipts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptResponseBody extends $tea.Model {
    results?: UpdateReceiptResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusRequest extends $tea.Model {
    accountPeriod?: string;
    actionType?: string;
    operatorId?: string;
    receiptId?: string;
    voucherCode?: string;
    voucherId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptVoucherStatusResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    body: UpdateReceiptVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RoleMemberMapValue extends $tea.Model {
    roleCode?: string;
    memberList?: RoleMemberMapValueMemberList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: BatchAddInvoiceRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: BatchAddInvoiceRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: BatchAddInvoiceRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: BatchAddInvoiceRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddInvoiceResponseBodyResult extends $tea.Model {
    errorKey?: string;
    errorMsg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptRequestReceipts extends $tea.Model {
    amount?: string;
    categoryCode?: string;
    code?: string;
    createTime?: number;
    createUserId?: string;
    customerCode?: string;
    enterpriseAcountCode?: string;
    occurDate?: number;
    principalId?: string;
    projectCode?: string;
    receiptType?: number;
    remark?: string;
    supplierCode?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateReceiptResponseBodyResults extends $tea.Model {
    code?: string;
    errorCode?: string;
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptRequestReceipts extends $tea.Model {
    code?: string;
    deleteUserId?: string;
    receiptType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteReceiptResponseBodyResults extends $tea.Model {
    code?: string;
    errorCode?: string;
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageRequestRequest extends $tea.Model {
    endTime?: number;
    financeType?: string;
    pageNumber?: number;
    pageSize?: number;
    startTime?: number;
    taxNo?: string;
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListTransportFeeDetailVOList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResultList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: GetInvoiceByPageResponseBodyResultListGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceStatus?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    sellerAddress?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    transportFeeDetailVOList?: GetInvoiceByPageResponseBodyResultListTransportFeeDetailVOList[];
    usedVehicleSaleDetailVOList?: GetInvoiceByPageResponseBodyResultListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: GetInvoiceByPageResponseBodyResultListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInvoiceByPageResponseBodyResult extends $tea.Model {
    hasMore?: string;
    list?: GetInvoiceByPageResponseBodyResultList[];
    nextCursor?: number;
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponseBodyList extends $tea.Model {
    code?: string;
    isDir?: boolean;
    name?: string;
    parentCode?: string;
    status?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponseBodyList extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerInfoResponseBodyList extends $tea.Model {
    code?: string;
    contactAddress?: string;
    contactCompanyTelephone?: string;
    contactEmail?: string;
    contactName?: string;
    contactTelephone?: string;
    description?: string;
    name?: string;
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    purchaserrBankName?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponseBodyList extends $tea.Model {
    accountCode?: string;
    accountId?: string;
    accountName?: string;
    accountRemark?: string;
    accountType?: string;
    amount?: string;
    bankCode?: string;
    bankName?: string;
    createTime?: number;
    creator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPermissionByUserIdResponseBodyPermissionDTOList extends $tea.Model {
    actionIdList?: string[];
    resourceIdentity?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponseBodyList extends $tea.Model {
    caode?: string;
    createTime?: number;
    creator?: string;
    description?: string;
    name?: string;
    projectCode?: string;
    projectName?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListCreator extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListCustomer extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyList extends $tea.Model {
    amount?: string;
    applyStatus?: string;
    createTime?: string;
    creator?: QueryReceiptForInvoiceResponseBodyListCreator;
    customer?: QueryReceiptForInvoiceResponseBodyListCustomer;
    invoiceType?: string;
    modelId?: string;
    purchaserAccount?: string;
    purchaserAddress?: string;
    purchaserBankName?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    receiptId?: string;
    recordTime?: string;
    remark?: string;
    source?: string;
    status?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListCreator extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListCustomer extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListPrincipal extends $tea.Model {
    avatarUrl?: string;
    nick?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListProject extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyListSupplier extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsBaseInfoResponseBodyList extends $tea.Model {
    amount?: string;
    createTime?: string;
    creator?: QueryReceiptsBaseInfoResponseBodyListCreator;
    customer?: QueryReceiptsBaseInfoResponseBodyListCustomer;
    modelId?: string;
    principal?: QueryReceiptsBaseInfoResponseBodyListPrincipal;
    project?: QueryReceiptsBaseInfoResponseBodyListProject;
    receiptId?: string;
    recordTime?: string;
    remark?: string;
    source?: string;
    status?: string;
    supplier?: QueryReceiptsBaseInfoResponseBodyListSupplier;
    title?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptsByPageResponseBodyList extends $tea.Model {
    appId?: string;
    data?: string;
    modelId?: string;
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponseBodyList extends $tea.Model {
    code?: string;
    createTime?: number;
    description?: string;
    name?: string;
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateApplyReceiptAndInvoiceRelatedRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponseInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponse extends $tea.Model {
    invoiceKeyVOList?: UpdateApplyReceiptAndInvoiceRelatedResponseBodyBatchUpdateInvoiceResponseInvoiceKeyVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVO extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestBlueGeneralInvoiceVOVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVO extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAbandonStatusRequestRedGeneralInvoiceVOVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAccountPeriodRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAccountPeriodRequestInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVO extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceAndReceiptRelatedRequestGeneralInvoiceVOVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList extends $tea.Model {
    amount?: string;
    goodsName?: string;
    quantity?: string;
    revenueCode?: string;
    rowNo?: string;
    specification?: string;
    taxAmount?: string;
    taxPre?: string;
    taxPreType?: string;
    taxRate?: string;
    unit?: string;
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList extends $tea.Model {
    amount?: string;
    cardNo?: string;
    endDate?: string;
    goodsName?: string;
    revenueCode?: string;
    rowNo?: string;
    startDate?: string;
    taxAmount?: string;
    taxRate?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList extends $tea.Model {
    auctionUnit?: string;
    auctionUnitAddress?: string;
    auctionUnitBank?: string;
    auctionUnitTaxNo?: string;
    auctionUtilTel?: string;
    carModel?: string;
    cardNo?: string;
    registration?: string;
    transferVehicle?: string;
    usedCarAddress?: string;
    usedCarMarket?: string;
    usedCarMarketBank?: string;
    usedCarMarketPhone?: string;
    usedCarMarketTaxNo?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListVehicleSaleDetailVOList extends $tea.Model {
    brand?: string;
    certificateNo?: string;
    engineNo?: string;
    idCardNo?: string;
    importCertificateNo?: string;
    inspectionListNo?: string;
    maxPassengers?: string;
    originPlace?: string;
    paymentVoucherNo?: string;
    taxAuthorityName?: string;
    taxAuthorityNo?: string;
    taxRate?: string;
    tonnage?: string;
    vehicleNo?: string;
    vehicleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOList extends $tea.Model {
    accountPeriod?: string;
    amount?: string;
    amountWithTax?: string;
    checkCode?: string;
    checkTime?: string;
    drewDate?: string;
    electronicUrl?: string;
    financeType?: string;
    fundType?: string;
    generalInvoiceDetailVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListGeneralInvoiceDetailVOList[];
    invoiceCode?: string;
    invoiceNo?: string;
    invoiceType?: string;
    machineCode?: string;
    oilFlag?: string;
    payee?: string;
    processInstCode?: string;
    processInstType?: string;
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankNameAccount?: string;
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    secondHandCarInvoiceDetailList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListSecondHandCarInvoiceDetailList[];
    sellerAddress?: string;
    sellerBankAccount?: string;
    sellerBankNameAccount?: string;
    sellerName?: string;
    sellerTaxNo?: string;
    sellerTel?: string;
    status?: string;
    supplySign?: string;
    taxAmount?: string;
    usedVehicleSaleDetailVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListUsedVehicleSaleDetailVOList[];
    vehicleSaleDetailVOList?: UpdateInvoiceVerifyStatusRequestGeneralInvoiceVOListVehicleSaleDetailVOList[];
    verifyStatus?: string;
    voucherCode?: string;
    voucherStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequestInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptRequestReceipts extends $tea.Model {
    amount?: string;
    categoryCode?: string;
    code?: string;
    customerCode?: string;
    enterpriseAcountCode?: string;
    occurDate?: number;
    principalId?: string;
    projectCode?: string;
    receiptType?: number;
    remark?: string;
    supplierCode?: string;
    title?: string;
    updateTime?: number;
    updateUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateReceiptResponseBodyResults extends $tea.Model {
    code?: string;
    errorCode?: string;
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RoleMemberMapValueMemberList extends $tea.Model {
    userId?: string;
    nick?: string;
    avatarUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    batchAddInvoice(request: BatchAddInvoiceRequest): Promise<BatchAddInvoiceResponse>;
    batchAddInvoiceWithOptions(request: BatchAddInvoiceRequest, headers: BatchAddInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<BatchAddInvoiceResponse>;
    checkVoucherStatus(request: CheckVoucherStatusRequest): Promise<CheckVoucherStatusResponse>;
    checkVoucherStatusWithOptions(request: CheckVoucherStatusRequest, headers: CheckVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<CheckVoucherStatusResponse>;
    createCustomer(request: CreateCustomerRequest): Promise<CreateCustomerResponse>;
    createCustomerWithOptions(request: CreateCustomerRequest, headers: CreateCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCustomerResponse>;
    createReceipt(request: CreateReceiptRequest): Promise<CreateReceiptResponse>;
    createReceiptWithOptions(request: CreateReceiptRequest, headers: CreateReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<CreateReceiptResponse>;
    deleteReceipt(request: DeleteReceiptRequest): Promise<DeleteReceiptResponse>;
    deleteReceiptWithOptions(request: DeleteReceiptRequest, headers: DeleteReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteReceiptResponse>;
    getBookkeepingUserList(): Promise<GetBookkeepingUserListResponse>;
    getBookkeepingUserListWithOptions(headers: GetBookkeepingUserListHeaders, runtime: $Util.RuntimeOptions): Promise<GetBookkeepingUserListResponse>;
    getCategory(request: GetCategoryRequest): Promise<GetCategoryResponse>;
    getCategoryWithOptions(request: GetCategoryRequest, headers: GetCategoryHeaders, runtime: $Util.RuntimeOptions): Promise<GetCategoryResponse>;
    getCustomer(request: GetCustomerRequest): Promise<GetCustomerResponse>;
    getCustomerWithOptions(request: GetCustomerRequest, headers: GetCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<GetCustomerResponse>;
    getFinanceAccount(request: GetFinanceAccountRequest): Promise<GetFinanceAccountResponse>;
    getFinanceAccountWithOptions(request: GetFinanceAccountRequest, headers: GetFinanceAccountHeaders, runtime: $Util.RuntimeOptions): Promise<GetFinanceAccountResponse>;
    getInvoiceByPage(request: GetInvoiceByPageRequest): Promise<GetInvoiceByPageResponse>;
    getInvoiceByPageWithOptions(tmpReq: GetInvoiceByPageRequest, headers: GetInvoiceByPageHeaders, runtime: $Util.RuntimeOptions): Promise<GetInvoiceByPageResponse>;
    getIsNewVersion(): Promise<GetIsNewVersionResponse>;
    getIsNewVersionWithOptions(headers: GetIsNewVersionHeaders, runtime: $Util.RuntimeOptions): Promise<GetIsNewVersionResponse>;
    getProject(request: GetProjectRequest): Promise<GetProjectResponse>;
    getProjectWithOptions(request: GetProjectRequest, headers: GetProjectHeaders, runtime: $Util.RuntimeOptions): Promise<GetProjectResponse>;
    getReceipt(request: GetReceiptRequest): Promise<GetReceiptResponse>;
    getReceiptWithOptions(request: GetReceiptRequest, headers: GetReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<GetReceiptResponse>;
    getSupplier(request: GetSupplierRequest): Promise<GetSupplierResponse>;
    getSupplierWithOptions(request: GetSupplierRequest, headers: GetSupplierHeaders, runtime: $Util.RuntimeOptions): Promise<GetSupplierResponse>;
    queryCategoryByPage(request: QueryCategoryByPageRequest): Promise<QueryCategoryByPageResponse>;
    queryCategoryByPageWithOptions(request: QueryCategoryByPageRequest, headers: QueryCategoryByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCategoryByPageResponse>;
    queryCustomerByPage(request: QueryCustomerByPageRequest): Promise<QueryCustomerByPageResponse>;
    queryCustomerByPageWithOptions(request: QueryCustomerByPageRequest, headers: QueryCustomerByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomerByPageResponse>;
    queryCustomerInfo(request: QueryCustomerInfoRequest): Promise<QueryCustomerInfoResponse>;
    queryCustomerInfoWithOptions(request: QueryCustomerInfoRequest, headers: QueryCustomerInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomerInfoResponse>;
    queryEnterpriseAccountByPage(request: QueryEnterpriseAccountByPageRequest): Promise<QueryEnterpriseAccountByPageResponse>;
    queryEnterpriseAccountByPageWithOptions(request: QueryEnterpriseAccountByPageRequest, headers: QueryEnterpriseAccountByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryEnterpriseAccountByPageResponse>;
    queryFinanceCompanyInfo(): Promise<QueryFinanceCompanyInfoResponse>;
    queryFinanceCompanyInfoWithOptions(headers: QueryFinanceCompanyInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryFinanceCompanyInfoResponse>;
    queryInvoiceRelationCount(): Promise<QueryInvoiceRelationCountResponse>;
    queryInvoiceRelationCountWithOptions(headers: QueryInvoiceRelationCountHeaders, runtime: $Util.RuntimeOptions): Promise<QueryInvoiceRelationCountResponse>;
    queryPermissionByUserId(request: QueryPermissionByUserIdRequest): Promise<QueryPermissionByUserIdResponse>;
    queryPermissionByUserIdWithOptions(request: QueryPermissionByUserIdRequest, headers: QueryPermissionByUserIdHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPermissionByUserIdResponse>;
    queryPermissionRoleMember(request: QueryPermissionRoleMemberRequest): Promise<QueryPermissionRoleMemberResponse>;
    queryPermissionRoleMemberWithOptions(request: QueryPermissionRoleMemberRequest, headers: QueryPermissionRoleMemberHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPermissionRoleMemberResponse>;
    queryProjectByPage(request: QueryProjectByPageRequest): Promise<QueryProjectByPageResponse>;
    queryProjectByPageWithOptions(request: QueryProjectByPageRequest, headers: QueryProjectByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryProjectByPageResponse>;
    queryReceiptForInvoice(request: QueryReceiptForInvoiceRequest): Promise<QueryReceiptForInvoiceResponse>;
    queryReceiptForInvoiceWithOptions(request: QueryReceiptForInvoiceRequest, headers: QueryReceiptForInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptForInvoiceResponse>;
    queryReceiptsBaseInfo(request: QueryReceiptsBaseInfoRequest): Promise<QueryReceiptsBaseInfoResponse>;
    queryReceiptsBaseInfoWithOptions(request: QueryReceiptsBaseInfoRequest, headers: QueryReceiptsBaseInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptsBaseInfoResponse>;
    queryReceiptsByPage(request: QueryReceiptsByPageRequest): Promise<QueryReceiptsByPageResponse>;
    queryReceiptsByPageWithOptions(request: QueryReceiptsByPageRequest, headers: QueryReceiptsByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptsByPageResponse>;
    querySupplierByPage(request: QuerySupplierByPageRequest): Promise<QuerySupplierByPageResponse>;
    querySupplierByPageWithOptions(request: QuerySupplierByPageRequest, headers: QuerySupplierByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QuerySupplierByPageResponse>;
    updateApplyReceiptAndInvoiceRelated(request: UpdateApplyReceiptAndInvoiceRelatedRequest): Promise<UpdateApplyReceiptAndInvoiceRelatedResponse>;
    updateApplyReceiptAndInvoiceRelatedWithOptions(request: UpdateApplyReceiptAndInvoiceRelatedRequest, headers: UpdateApplyReceiptAndInvoiceRelatedHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateApplyReceiptAndInvoiceRelatedResponse>;
    updateFinanceCompanyInfo(request: UpdateFinanceCompanyInfoRequest): Promise<UpdateFinanceCompanyInfoResponse>;
    updateFinanceCompanyInfoWithOptions(request: UpdateFinanceCompanyInfoRequest, headers: UpdateFinanceCompanyInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateFinanceCompanyInfoResponse>;
    updateInvoiceAbandonStatus(request: UpdateInvoiceAbandonStatusRequest): Promise<UpdateInvoiceAbandonStatusResponse>;
    updateInvoiceAbandonStatusWithOptions(request: UpdateInvoiceAbandonStatusRequest, headers: UpdateInvoiceAbandonStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAbandonStatusResponse>;
    updateInvoiceAccountPeriod(request: UpdateInvoiceAccountPeriodRequest): Promise<UpdateInvoiceAccountPeriodResponse>;
    updateInvoiceAccountPeriodWithOptions(request: UpdateInvoiceAccountPeriodRequest, headers: UpdateInvoiceAccountPeriodHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAccountPeriodResponse>;
    updateInvoiceAndReceiptRelated(request: UpdateInvoiceAndReceiptRelatedRequest): Promise<UpdateInvoiceAndReceiptRelatedResponse>;
    updateInvoiceAndReceiptRelatedWithOptions(request: UpdateInvoiceAndReceiptRelatedRequest, headers: UpdateInvoiceAndReceiptRelatedHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceAndReceiptRelatedResponse>;
    updateInvoiceIgnoreStatus(request: UpdateInvoiceIgnoreStatusRequest): Promise<UpdateInvoiceIgnoreStatusResponse>;
    updateInvoiceIgnoreStatusWithOptions(request: UpdateInvoiceIgnoreStatusRequest, headers: UpdateInvoiceIgnoreStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceIgnoreStatusResponse>;
    updateInvoiceVerifyStatus(request: UpdateInvoiceVerifyStatusRequest): Promise<UpdateInvoiceVerifyStatusResponse>;
    updateInvoiceVerifyStatusWithOptions(request: UpdateInvoiceVerifyStatusRequest, headers: UpdateInvoiceVerifyStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceVerifyStatusResponse>;
    updateInvoiceVoucherStatus(request: UpdateInvoiceVoucherStatusRequest): Promise<UpdateInvoiceVoucherStatusResponse>;
    updateInvoiceVoucherStatusWithOptions(request: UpdateInvoiceVoucherStatusRequest, headers: UpdateInvoiceVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceVoucherStatusResponse>;
    updateReceipt(request: UpdateReceiptRequest): Promise<UpdateReceiptResponse>;
    updateReceiptWithOptions(request: UpdateReceiptRequest, headers: UpdateReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateReceiptResponse>;
    updateReceiptVoucherStatus(request: UpdateReceiptVoucherStatusRequest): Promise<UpdateReceiptVoucherStatusResponse>;
    updateReceiptVoucherStatusWithOptions(request: UpdateReceiptVoucherStatusRequest, headers: UpdateReceiptVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateReceiptVoucherStatusResponse>;
}
